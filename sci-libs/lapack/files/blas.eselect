# -*-eselect-*-  vim: ft=eselect
# Copyright 2019 Gentoo Foundation
# Distributed under the terms of the GNU GPL version 2 or later
# TODO: override skel::do_add

inherit config tests multilib skel

DESCRIPTION="Manage installed alternatives of BLAS shared objects"
MAINTAINER="lumin@debian.org"
VERSION="20190611"
MODULE="BLAS/CBLAS"

ES_BLAS_ENVD="/etc/env.d/blas/config"
ES_BLAS_LDCONF="/etc/ld.so.conf.d/81-blas"

### helper utility to find all available BLAS/CBLAS implementations
find_targets_in() {
	[[ $# -eq 1 ]] || die -q "in which libdir?"

	local cand
	for cand in ${EROOT}/usr/$1/blas/*; do
		[[ -d ${cand} ]] && basename ${cand}
	done
}

### show action
do_show() {
	# do_show -- show both lib64 and lib32 selection
	# do_show libxx -- show libxx selection
	local libdir cur libdirs=( $(list_libdirs) )

	# if manually specified libdirs
	if [[ ! $# -eq 0 ]]; then
		for libdir in $@; do
			has $libdir ${libdirs[@]} || die -q "invalid libdir '$libdir'!"
		done
		libdirs=( $@ )
	fi

	for libdir in ${libdirs[@]}; do
		[[ ! -d /usr/$libdir ]] && continue
		[[ ! -r ${ES_BLAS_ENVD}-${libdir} ]] && continue
		cur=$(load_config ${ES_BLAS_ENVD}-${libdir} CURRENT)
		echo ${libdir}: $cur
	done
}

### list action
do_list() {
	local i cur targets
	local libdir libdirs=( $(list_libdirs) )

	# if manually specified libdirs
	if [[ ! $# -eq 0 ]]; then
		for libdir in $@; do
			has $libdir ${libdirs[@]} || die -q "invalid libdir '$libdir'!"
		done
		libdirs=( $@ )
	fi
	
	for libdir in ${libdirs[@]}; do
		[[ ! -d /usr/$libdir ]] || [[ -L /usr/$libdir ]] && continue
		targets=( $(find_targets_in $libdir) )
		cur=$(load_config ${ES_BLAS_ENVD}-${libdir} CURRENT)

		write_list_start "Available BLAS/CBLAS ($libdir) candidates:"
		for (( i = 0; i < ${#targets[@]}; i++ )); do
			[[ ${targets[i]} = $cur ]] \
			&& targets[i]=$(highlight_marker "${targets[i]}")
		done
		write_numbered_list -m "(none found)" "${targets[@]}"
	done
}

### set action
do_set() {
	local libdirs=( $(list_libdirs) )
	local targets libdir ldconf

	# check argument existence
	[[ $# -eq 2 ]] || \
		die -q "Please specify <libdir> <impl> to activate!"
	# check argumenet validity
	has "$1" "${libdirs[@]}" || die -q "Invalid libdir '$1'!"
	targets=( $(find_targets_in $1) )
	has "$2" "${targets[@]}" || die -q "Invalid impl '$2'!"
	ldconf="${ES_BLAS_LDCONF}-$1.conf"

	# store the configuration
	store_config "${ES_BLAS_ENVD}-$1" CURRENT "$2"

	# write corresponding ld.so.conf file
	truncate -s0 $ldconf
	echo "# Automatically generated by eselect::blas." >> $ldconf
	echo "# Don't edit." >> $ldconf
	echo "/usr/$1/blas/$2" >> $ldconf

	# refresh cache
	ldconfig
}
